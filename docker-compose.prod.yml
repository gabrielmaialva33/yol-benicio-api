version: '3.8'

services:
  app:
    image: ghcr.io/gabrielmaia/yol-benicio-api:${IMAGE_TAG:-latest}
    container_name: yol-benicio-api
    restart: unless-stopped
    ports:
      - "3334:3333"
    environment:
      - NODE_ENV=production
      - PORT=3333
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis
      - QUEUE_REDIS_HOST=redis
      - QUEUE_REDIS_PORT=6379
      - QUEUE_REDIS_PASSWORD=redis
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app_storage:/app/storage
      - app_logs:/app/storage/logs
    networks:
      - yol-network
    healthcheck:
      test: ["CMD", "node", "ace", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: timescale/timescaledb-ha:pg17
    container_name: base-acl-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - yol-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: base-acl-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - yol-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Add nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: yol-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - yol-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  yol-network:
    driver: bridge